package com.netapp.wfa.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.5.0
 * 2011-11-09T12:12:34.200+05:30
 * Generated source version: 2.5.0
 * 
 */
@WebService(targetNamespace = "http://ws.wfa.netapp.com/", name = "WorkflowService_doc")
@XmlSeeAlso({ObjectFactory.class})
public interface WorkflowServiceDoc {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getCommandArguments", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetCommandArguments")
    @WebMethod
    @ResponseWrapper(localName = "getCommandArgumentsResponse", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetCommandArgumentsResponse")
    public java.util.List<com.netapp.wfa.ws.CommandArgument> getCommandArguments(
        @WebParam(name = "jobId", targetNamespace = "")
        int jobId,
        @WebParam(name = "commandDisplayName", targetNamespace = "")
        java.lang.String commandDisplayName,
        @WebParam(name = "rowNumber", targetNamespace = "")
        int rowNumber,
        @WebParam(name = "parameterName", targetNamespace = "")
        java.lang.String parameterName
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "executeWorkflow", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.ExecuteWorkflow")
    @WebMethod
    @ResponseWrapper(localName = "executeWorkflowResponse", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.ExecuteWorkflowResponse")
    public int executeWorkflow(
        @WebParam(name = "workflowId", targetNamespace = "")
        java.lang.Integer workflowId,
        @WebParam(name = "userInputsEqualsValues", targetNamespace = "")
        java.util.List<java.lang.String> userInputsEqualsValues
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getAllWorkflows", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetAllWorkflows")
    @WebMethod
    @ResponseWrapper(localName = "getAllWorkflowsResponse", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetAllWorkflowsResponse")
    public java.util.List<com.netapp.wfa.ws.Workflow> getAllWorkflows();

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getReturnParameters", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetReturnParameters")
    @WebMethod
    @ResponseWrapper(localName = "getReturnParametersResponse", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetReturnParametersResponse")
    public java.util.List<com.netapp.wfa.ws.ReturnParameter> getReturnParameters(
        @WebParam(name = "jobId", targetNamespace = "")
        int jobId,
        @WebParam(name = "parameters", targetNamespace = "")
        java.util.List<java.lang.String> parameters
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getJobStatus", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetJobStatus")
    @WebMethod
    @ResponseWrapper(localName = "getJobStatusResponse", targetNamespace = "http://ws.wfa.netapp.com/", className = "com.netapp.wfa.ws.GetJobStatusResponse")
    public com.netapp.wfa.ws.JobStatus getJobStatus(
        @WebParam(name = "jobId", targetNamespace = "")
        java.lang.Integer jobId
    );
}
